# Generated by Django 5.0.3 on 2024-03-09 18:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Nome da loja')),
                ('cpf', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('cnpj', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição da loja')),
                ('activate_loyalty', models.BooleanField(default=False, verbose_name='Ativar Fidelidade ?:')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'db_table': 'stores',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='Dia da semana, 1 para domingo e 7 para sábado')),
                ('is_open', models.BooleanField(default=False, verbose_name='Esta aberto ?: ')),
                ('opening_time', models.TimeField(blank=True, null=True, verbose_name='Horario de abertura: ')),
                ('closing_time', models.TimeField(blank=True, null=True, verbose_name='Horario de fechamento: ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hours', to='stores.store')),
            ],
            options={
                'verbose_name': 'Opening Hours',
                'verbose_name_plural': 'Opening Hours',
                'db_table': 'opening_hours',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AddressStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=255)),
                ('reference_point', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=64)),
                ('state', models.CharField(max_length=64)),
                ('postal_code', models.CharField(blank=True, max_length=16, null=True)),
                ('country', models.CharField(default='Brasil', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='stores.store')),
            ],
            options={
                'verbose_name': 'Address Store',
                'verbose_name_plural': 'Addresses Stores',
                'db_table': 'addresses_store',
                'managed': True,
            },
        ),
    ]
